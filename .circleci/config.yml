version: 2.1
jobs:
  build-pkg:
    docker:
      - image: continuumio/miniconda3
    resource_class: large
    steps:
      - checkout
      - run: git config --global --unset url.ssh://git@github.com.insteadof
      - run:
          name: Update packages
          command: |
            apt-get update
            apt-get -y install build-essential libssl-dev
      - run:
          name: Add conda channels
          command: |
              conda config --add channels noaa-orr-erd
              conda config --add channels conda-forge
      - restore_cache:
          key: v3-deps1-{{ checksum "opendrift_packages.yml" }}
      - run:
          name: Install requirements
          command: |
            if [ ! -e /opt/conda/envs/opendrift_packages ]; then
              conda env create --file opendrift_packages.yml
              source activate opendrift_packages
            fi
      - save_cache:
          key: v3-deps1-{{ checksum "opendrift_packages.yml" }}
          paths:
            - "/opt/conda/envs"
      - run:
          name: Building packages
          command: |
            eval `ssh-agent`
            mkdir -p builds/pkgs
            source activate opendrift_packages
            conda build --output-folder builds/pkgs --no-anaconda-upload roaring-landmask
            conda build --output-folder builds/pkgs --no-anaconda-upload opendrift-landmask-data
            conda build --output-folder builds/pkgs --no-anaconda-upload opendrift
            ls -R builds/

      - persist_to_workspace:
          root: builds
          paths: pkgs

  deploy-pkg:
    docker:
      - image: continuumio/miniconda3
    resource_class: large
    steps:
      - checkout
      - attach_workspace:
          at: builds
      - run:
          name: Update and install packages
          command: |
            apt-get update
            apt-get install -y jq
      # - run:
      #     name: Add conda channels
      #     command: |
      #         conda config --add channels noaa-orr-erd
      #         conda config --add channels conda-forge
      # - restore_cache:
      #     key: v3-deps1-{{ checksum "opendrift_packages.yml" }}
      - run:
          name: Install requirements
          command: |
            conda install -y anaconda-client
      # - save_cache:
      #     key: v3-deps1-{{ checksum "opendrift_packages.yml" }}
      #     paths:
      #       - "/opt/conda/envs"
      - run:
          name: Uploading packages
          command: |
            ls -R builds/pkgs/noarch

            # source activate opendrift_packages
            for p in $(jq -r '.packages | keys[]' builds/pkgs/noarch/repodata.json); do
              echo "Uploading: ${p}"
              p="builds/pkgs/noarch/${p}"

              anaconda -t "${ANACONDA_TOKEN}" upload -u OpenDrift --skip-existing "${p}"
              sleep 3 # try not to spam anaconda servers
            done

workflows:
  version: 2.1
  build:
    jobs:
      - build-pkg
      - deploy-pkg:
          requires:
            - build-pkg
          filters:
            branches:
             only: master

